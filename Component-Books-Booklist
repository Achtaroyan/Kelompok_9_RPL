import React from 'react';
import { motion, AnimatePresence } from "framer-motion";
import { Card, CardContent } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Button } from "@/components/ui/button";
import { BookOpen, Star, Eye, Heart, Package, User, Calendar } from "lucide-react";
import { Skeleton } from "@/components/ui/skeleton";

export default function BookList({ books, isLoading, onBookClick }) {
  if (isLoading) {
    return (
      <div className="space-y-4">
        {Array(8).fill(0).map((_, i) => (
          <Card key={i} className="animate-pulse">
            <CardContent className="p-6">
              <div className="flex gap-6">
                <Skeleton className="w-24 h-32 rounded" />
                <div className="flex-1 space-y-3">
                  <Skeleton className="h-6 w-3/4" />
                  <Skeleton className="h-4 w-1/2" />
                  <Skeleton className="h-4 w-full" />
                  <Skeleton className="h-4 w-2/3" />
                  <div className="flex gap-2">
                    <Skeleton className="h-6 w-20 rounded-full" />
                    <Skeleton className="h-6 w-16 rounded-full" />
                  </div>
                </div>
              </div>
            </CardContent>
          </Card>
        ))}
      </div>
    );
  }

  return (
    <motion.div
      initial={{ opacity: 0 }}
      animate={{ opacity: 1 }}
      className="space-y-6"
    >
      <AnimatePresence>
        {books.map((book, index) => (
          <motion.div
            key={book.id}
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            exit={{ opacity: 0, y: -20 }}
            transition={{ delay: index * 0.1 }}
            whileHover={{ scale: 1.01 }}
          >
            <Card className="bg-white/80 backdrop-blur-sm hover:shadow-xl transition-all duration-300 border-blue-100">
              <CardContent className="p-6">
                <div className="flex gap-6">
                  {/* Book Cover */}
                  <div className="flex-shrink-0">
                    <div 
                      className="w-24 h-32 bg-gradient-to-br from-blue-200 to-indigo-300 rounded-lg flex items-center justify-center cursor-pointer relative overflow-hidden group"
                      onClick={() => onBookClick(book.id)}
                    >
                      {book.cover_url ? (
                        <img 
                          src={book.cover_url} 
                          alt={book.title}
                          className="w-full h-full object-cover group-hover:scale-110 transition-transform duration-300"
                        />
                      ) : (
                        <BookOpen className="w-8 h-8 text-blue-600" />
                      )}
                      <div className="absolute inset-0 bg-black/20 opacity-0 group-hover:opacity-100 transition-opacity duration-300" />
                    </div>
                  </div>

                  {/* Book Info */}
                  <div className="flex-1 min-w-0">
                    <div className="flex justify-between items-start mb-3">
                      <div className="flex-1">
                        <h3 className="text-xl font-bold text-gray-900 mb-1 cursor-pointer hover:text-blue-600 transition-colors">
                          {book.title}
                        </h3>
                        <div className="flex items-center gap-1 text-gray-600 mb-2">
                          <User className="w-4 h-4" />
                          <span>{book.author}</span>
                        </div>
                      </div>
                      <Button
                        variant="outline"
                        size="icon"
                        className="border-rose-200 text-rose-600 hover:bg-rose-50"
                      >
                        <Heart className="w-5 h-5" />
                      </Button>
                    </div>

                    <p className="text-gray-700 mb-4 line-clamp-2">
                      {book.description}
                    </p>

                    {/* Badges and Stats */}
                    <div className="flex flex-wrap items-center gap-3 mb-4">
                      <Badge className="bg-blue-100 text-blue-800 border-blue-200">
                        {book.topic?.replace(/_/g, ' ')}
                      </Badge>
                      
                      <Badge className={`${book.stock > 10 ? 'bg-green-100 text-green-800' : book.stock > 0 ? 'bg-yellow-100 text-yellow-800' : 'bg-red-100 text-red-800'}`}>
                        <Package className="w-3 h-3 mr-1" />
                        Stok: {book.stock}
                      </Badge>

                      {book.rating && (
                        <div className="flex items-center gap-1">
                          <Star className="w-4 h-4 text-yellow-400 fill-current" />
                          <span className="text-sm font-medium">{book.rating}/5</span>
                        </div>
                      )}

                      <div className="flex items-center gap-1 text-sm text-gray-500">
                        <Eye className="w-4 h-4" />
                        {book.views || 0} views
                      </div>
                    </div>

                    {/* Additional Info */}
                    <div className="flex flex-wrap items-center justify-between text-sm text-gray-600 mb-4">
                      <div className="flex items-center gap-4">
                        <span>Penerbit: {book.publisher}</span>
                        {book.published_year && (
                          <div className="flex items-center gap-1">
                            <Calendar className="w-4 h-4" />
                            <span>{book.published_year}</span>
                          </div>
                        )}
                        {book.pages && (
                          <span>{book.pages} halaman</span>
                        )}
                      </div>
                    </div>

                    {/* Action Buttons */}
                    <div className="flex gap-3">
                      <Button 
                        className="bg-gradient-to-r from-blue-500 to-indigo-600 hover:from-blue-600 hover:to-indigo-700"
                        onClick={() => onBookClick(book.id)}
                      >
                        Lihat Detail Lengkap
                      </Button>
                      <Button variant="outline" className="border-blue-200 text-blue-600 hover:bg-blue-50">
                        Tambah ke Wishlist
                      </Button>
                    </div>
                  </div>
                </div>
              </CardContent>
            </Card>
          </motion.div>
        ))}
      </AnimatePresence>

      {books.length === 0 && !isLoading && (
        <motion.div
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          className="text-center py-16"
        >
          <BookOpen className="w-16 h-16 text-gray-300 mx-auto mb-4" />
          <h3 className="text-xl font-semibold text-gray-600 mb-2">Buku Tidak Ditemukan</h3>
          <p className="text-gray-500">Coba ubah kata kunci pencarian atau filter</p>
        </motion.div>
      )}
    </motion.div>
  );
}
