import React from 'react';
import { motion, AnimatePresence } from "framer-motion";
import { Card, CardContent } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Button } from "@/components/ui/button";
import { BookOpen, Star, Eye, Heart, Package, DollarSign } from "lucide-react";
import { Skeleton } from "@/components/ui/skeleton";

export default function BookGrid({ books, isLoading, onBookClick, onAddToWishlist }) {
  const typeColors = {
    "fisik": "bg-blue-100 text-blue-800",
    "ebook": "bg-green-100 text-green-800",
    "audiobook": "bg-purple-100 text-purple-800",
    "hybrid": "bg-orange-100 text-orange-800"
  };

  if (isLoading) {
    return (
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6">
        {Array(12).fill(0).map((_, i) => (
          <Card key={i} className="animate-pulse bg-white/60 backdrop-blur-sm">
            <CardContent className="p-0">
              <Skeleton className="w-full h-72 rounded-t-lg" />
              <div className="p-4 space-y-3">
                <Skeleton className="h-5 w-3/4" />
                <Skeleton className="h-4 w-1/2" />
                <Skeleton className="h-3 w-full" />
                <div className="flex gap-2">
                  <Skeleton className="h-6 w-16 rounded-full" />
                  <Skeleton className="h-6 w-12 rounded-full" />
                </div>
              </div>
            </CardContent>
          </Card>
        ))}
      </div>
    );
  }

  return (
    <motion.div
      initial={{ opacity: 0 }}
      animate={{ opacity: 1 }}
      className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6"
    >
      <AnimatePresence>
        {books.map((book, index) => (
          <motion.div
            key={book.id}
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            exit={{ opacity: 0, y: -20 }}
            transition={{ delay: index * 0.05 }}
            whileHover={{ y: -8, scale: 1.02 }}
            className="group"
          >
            <Card className="bg-white/80 backdrop-blur-sm hover:shadow-2xl transition-all duration-500 border-sky-100 overflow-hidden h-full group-hover:border-sky-300">
              <CardContent className="p-0 h-full flex flex-col">
                {/* Book Cover */}
                <div 
                  className="relative h-72 bg-gradient-to-br from-sky-200 to-blue-300 flex items-center justify-center cursor-pointer overflow-hidden"
                  onClick={() => onBookClick(book.id)}
                >
                  {book.cover_url ? (
                    <motion.img 
                      src={book.cover_url} 
                      alt={book.title}
                      className="w-full h-full object-cover group-hover:scale-110 transition-transform duration-500"
                      whileHover={{ scale: 1.1 }}
                    />
                  ) : (
                    <BookOpen className="w-16 h-16 text-sky-600" />
                  )}
                  
                  {/* Overlay */}
                  <motion.div 
                    initial={{ opacity: 0 }}
                    whileHover={{ opacity: 1 }}
                    className="absolute inset-0 bg-black/30 flex items-center justify-center"
                  >
                    <Button
                      size="sm"
                      className="bg-white/90 text-gray-800 hover:bg-white"
                    >
                      Lihat Detail
                    </Button>
                  </motion.div>
                  
                  {/* Stock indicator */}
                  <div className="absolute top-3 right-3">
                    <Badge className={`${book.stock > 10 ? 'bg-emerald-500' : book.stock > 0 ? 'bg-yellow-500' : 'bg-red-500'} text-white border-none shadow-lg`}>
                      <Package className="w-3 h-3 mr-1" />
                      {book.stock}
                    </Badge>
                  </div>

                  {/* Rating */}
                  {book.rating > 0 && (
                    <div className="absolute top-3 left-3">
                      <Badge className="bg-yellow-500 text-white border-none shadow-lg">
                        <Star className="w-3 h-3 mr-1 fill-current" />
                        {book.rating}
                      </Badge>
                    </div>
                  )}

                  {/* Book Type */}
                  <div className="absolute bottom-3 left-3">
                    <Badge className={`${typeColors[book.book_type]} border-none shadow-lg`}>
                      {book.book_type?.replace(/_/g, ' ')}
                    </Badge>
                  </div>
                </div>

                {/* Book Info */}
                <div className="p-4 flex-1 flex flex-col">
                  <div className="flex-1">
                    <h3 className="font-bold text-gray-900 text-lg line-clamp-2 mb-2 group-hover:text-sky-600 transition-colors">
                      {book.title}
                    </h3>
                    <p className="text-gray-600 text-sm mb-2">oleh {book.author}</p>
                    <p className="text-gray-700 text-sm line-clamp-2 mb-3 leading-relaxed">
                      {book.description}
                    </p>
                  </div>

                  <div className="space-y-3">
                    <div className="flex items-center justify-between">
                      <Badge className="bg-sky-100 text-sky-800 border-sky-200">
                        {book.topic?.replace(/_/g, ' ')}
                      </Badge>
                      <div className="flex items-center gap-1 text-sm text-gray-500">
                        <Eye className="w-4 h-4" />
                        {book.views || 0}
                      </div>
                    </div>

                    <div className="flex items-center justify-between">
                      <div className="flex items-center gap-1 text-lg font-bold text-emerald-600">
                        <DollarSign className="w-4 h-4" />
                        Rp {book.price?.toLocaleString('id-ID')}
                      </div>
                      {book.wishlist_count > 0 && (
                        <div className="flex items-center gap-1 text-sm text-rose-500">
                          <Heart className="w-4 h-4 fill-current" />
                          {book.wishlist_count}
                        </div>
                      )}
                    </div>

                    <div className="flex gap-2">
                      <Button 
                        size="sm" 
                        className="flex-1 bg-gradient-to-r from-sky-500 to-blue-600 hover:from-sky-600 hover:to-blue-700"
                        onClick={() => onBookClick(book.id)}
                      >
                        Lihat Detail
                      </Button>
                      <Button 
                        size="sm" 
                        variant="outline"
                        className="border-rose-200 text-rose-600 hover:bg-rose-50 hover:border-rose-300"
                        onClick={() => onAddToWishlist(book)}
                      >
                        <Heart className="w-4 h-4" />
                      </Button>
                    </div>

                    {/* Publisher and Year */}
                    <div className="flex justify-between items-center text-xs text-gray-500 pt-2 border-t border-gray-100">
                      <span className="truncate">{book.publisher}</span>
                      <span>{book.published_year}</span>
                    </div>
                  </div>
                </div>
              </CardContent>
            </Card>
          </motion.div>
        ))}
      </AnimatePresence>

      {books.length === 0 && !isLoading && (
        <motion.div
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          className="col-span-full text-center py-20"
        >
          <motion.div
            animate={{ 
              y: [0, -10, 0],
              scale: [1, 1.1, 1]
            }}
            transition={{ 
              duration: 2,
              repeat: Infinity,
              ease: "easeInOut"
            }}
          >
            <BookOpen className="w-24 h-24 text-sky-300 mx-auto mb-6" />
          </motion.div>
          <h3 className="text-2xl font-bold text-gray-600 mb-4">Buku Tidak Ditemukan</h3>
          <p className="text-gray-500 max-w-md mx-auto">
            Coba ubah kata kunci pencarian atau filter untuk menemukan buku yang Anda cari
          </p>
        </motion.div>
      )}
    </motion.div>
  );
}
